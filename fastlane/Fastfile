# Import base_config from git
import_from_git(url: 'https://github.com/rakutentech/ios-buildconfig.git')

platform :ios do
  desc "Build everything"
  lane :ci do |options|
    shared_tests(options)
    build_swift_package
    archive
  end

  lane :build_swift_package do
    # A fix for incorrect Shock dependencies
    sh 'git config --global url."https://github.com/".insteadOf "git@github.com:"'
    scan(
      clean: true,
      build_for_testing: true,
      scheme: 'Tests',
      device: ENV['REM_FL_TESTS_DEVICE'] || 'iPhone 11',
      project: 'SampleSPM/SampleSPM.xcodeproj',
    )
    sh 'git config --global --unset url."https://github.com/".insteadOf'
  end

  desc "Commit version bump in Constants, podspec"
  lane :commit_sdk_ver_bump do |options|
    target_version = options[:version]
    UI.user_error!("version param must be passed in") unless !target_version.to_s.empty?
    replacing = "static let sdkVersion = \"#{target_version}\""
    regex = "static let sdkVersion = .*"
    constant_file = "Constants.swift"
    sh "find .. -type f -name '#{constant_file}' -exec sed -i '' -e 's/#{regex}/#{replacing}/g' {} ';'"
    if target_version["snapshot"]
      UI.message "Skipping docs version bump because of snapshot version"
    else
      sh "echo #{target_version} >>../_versions 2>&1"
    end
    update_marketing_version(version_number: target_version, xcodeproj: './RInAppMessaging.xcodeproj')
    version_bump_podspec(path: "RInAppMessaging.podspec", version_number: target_version)
    git_commit(
      path: ["./Sources/RInAppMessaging/Constants.swift", "_versions", "RInAppMessaging.podspec", "RInAppMessaging.xcodeproj/project.pbxproj"],
      message: "chore: bump sdkVersion to #{target_version}")
  end

  lane :run_xcov do
    xcov(
      workspace: "RInAppMessaging.xcworkspace",
      scheme: "RInAppMessaging-Example",
      output_directory: "xcov_output",
      include_test_targets: false,
      json_report: true
    )  
  end

  desc "Archive Sample app"
  lane :archive do
    cocoapods(repo_update: ENV['REM_FL_CP_REPO_UPDATE'] || false)

    # Take config URL from env variable or set a dummy one
    config_url = ENV['RIAM_CONFIG_URL'] || 'http://localhost:6789/config'

    xcodebuild(
      archive: true,
      archive_path: "./artifacts/RInAppMessaging.xcarchive",
      scheme: ENV['REM_FL_SAMPLE_SCHEME'],
      workspace: ENV['REM_FL_SAMPLE_WORKSPACE'],
      xcargs: "CODE_SIGN_IDENTITY='' CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO ENABLE_BITCODE=NO RIAM_CONFIG_URL=#{config_url}",
    )
  end

  desc "Create and sign ipa from generated xcarchive artifact"
  lane :create_ipa do |options|
    gym(
      skip_build_archive: true,
      export_team_id: options[:export_team_id] || ENV['REM_FL_EXPORT_TEAM_ID'],
      output_directory: "./artifacts",
      include_symbols: true,
      scheme: ENV['REM_FL_SAMPLE_SCHEME'],
      workspace: ENV['REM_FL_SAMPLE_WORKSPACE'],
      output_name: "RInAppMessaging.ipa",
      archive_path: "./artifacts/RInAppMessaging.xcarchive",
      export_options: {
        method: options[:export_method] || "ad-hoc",
        provisioningProfiles: {
          "jp.co.rakuten.inappmessaging.demo" => options[:provisioning_profile]
        }
      },
    )
  end
end
