---
format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
trigger_map:
- push_branch: "*"
  workflow: primary
- pull_request_source_branch: "*"
  workflow: primary
- tag: "*.*.*"
  workflow: deploy
workflows:

  primary:
    before_run:
    - _setup
    after_run:
    - _report
    steps:
    - fastlane@2:
        inputs:
        - update_fastlane: 'false'
        - lane: ci
        title: Build & Test

  deploy:
    before_run:
    - _setup
    steps:
    - script@1:
        title: Verify branch
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            if [[ "${BITRISE_GIT_BRANCH}" != "master" ]]; then
              echo " [!] Deployments are allowed only on 'master' branch"
              exit 1
            fi
    - script@1:
        title: Lint and push Cocoapods trunk
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            bundle exec pod spec lint --allow-warnings
            bundle exec pod trunk push --allow-warnings --verbose
    - script@1:
        title: Generate docs
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            bundle exec jazzy
    - script@1:
        title: Deploy Docs to Github Pages
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            # Remove docs from gitignore
            rm .gitignore
            git add docs
            git commit -m "Deploy Jazzy docs for version $BITRISE_GIT_TAG"

            git config --global url."https://x-token-auth:$PUBLISHER_GITHUB_API_TOKEN@github.com".InsteadOf https://github.com
            git subtree push --prefix docs origin gh-pages
            git config --global --unset url."https://github.com".insteadOf

  integration_tests:
    before_run:
    - _setup
    steps:
    - xcode-test@2:
        inputs:
        - simulator_device: iPhone 8
        - scheme: IntegrationTests
        - should_build_before_test: 'no'
    - cache-push@2:
        inputs:
        - cache_paths: |-
            $BITRISE_CACHE_DIR
            $GEM_CACHE_PATH
    - build-status-change@0:
        inputs:
        - access_token: "$BITRISE_ACCESS_TOKEN"
    - slack@3:
        run_if: |-
          {{if .IsBuildFailed}}
          true
          {{else}}
          {{enveq "BUILD_STATUS_CHANGED" "true"}}
          {{end}}
        inputs:
        - channel: ''
        - webhook_url: "$SLACK_CHANNEL_WEBHOOK"
        - text: ''
        - title: ''
        - author_name: ''
        - channel_on_error: ''
        - pretext: ''
        - pretext_on_error: ''
        - message_on_error: |+
            $BITRISE_APP_TITLE » $BITRISE_TRIGGERED_WORKFLOW_TITLE - #$BITRISE_BUILD_NUMBER *Failure*
            <$BITRISE_BUILD_URL|Open>
        - message: |+
            $BITRISE_APP_TITLE » $BITRISE_TRIGGERED_WORKFLOW_TITLE - #$BITRISE_BUILD_NUMBER *Back to normal*
            <$BITRISE_BUILD_URL|Open>
        - fields: ''
        - buttons: ''
        - footer: ''
        - footer_icon: ''
        - timestamp: 'no'
        - icon_url_on_error: ''
        - from_username_on_error: ''
        - color_on_error: "#d10b20"
        
  _setup:
    steps:
    - git-clone@4:
        inputs:
        - update_submodules: 'no'
    - cache-pull@2: {}
    - script@1:
        title: Bundle install
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            if [ ! -f "Gemfile" ]; then
                echo "No Gemfile detected. Skipping..."
                exit 0
            fi
            bundle install
            RBENV_DIR="`cd $(rbenv which ruby)/../..;pwd`"
            echo "Gem cache directory: $RBENV_DIR"
            envman add --key GEM_CACHE_PATH --value $RBENV_DIR
    - brew-install@0:
        title: Install swiftlint
        inputs:
        - cache_enabled: 'yes'
        - upgrade: 'no'
        - packages: swiftlint
    - cocoapods-install@1:
        inputs:
        - verbose: 'false'

  _report:
    steps:
    - danger@2:
        inputs:
        - github_api_token: "$DANGER_GITHUB_API_TOKEN"
    - cache-push@2:
        inputs:
        - cache_paths: |-
            $BITRISE_CACHE_DIR
            $GEM_CACHE_PATH
    - script@1:
        title: Send XCov report
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            bash <(curl -s https://codecov.io/bash) -J '^RInAppMessaging$' -X gcov
app:
  envs:
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: RInAppMessaging.xcworkspace
  - opts:
      is_expand: false
    BITRISE_SCHEME: RInAppMessaging-Example
